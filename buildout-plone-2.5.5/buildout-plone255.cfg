[buildout]

extends =
    base-plone255.cfg

parts +=
    client1
    client2
    zeoserver
    productdistros
    cmds
    five
    unicode
    supervisor 

eggs +=
    PyPDF

http-address = 8002
zeo-address = 8000 
supervisor-address = 8080
effective-user = admin

############################################
# Debug Mode
# ----------
# Change debug-mode to "on" to run in development mode.
#
debug-mode = off
# Add-on developers should turn deprecation warnings on
deprecation-warnings = off
# change verbose-security to "on" for useful security errors while developing
verbose-security = off

############################################
# Backup Directory
# ----------------
# Sets the target directory for the bin/backup and bin/snapshotbackup
# commands. Default is inside this project's var directory, but ideally
# this should be on a separate volume or backup server.
#
backups-dir=${buildout:directory}/var

# Don't download new things unless needed to satisfy dependencies.
# Override this on the command line with the "-n" flag.
newest = false

[zeoserver]
# Use this section to install and configure a Zope
# Enterprise Objects server.
# For options see http://pypi.python.org/pypi/plone.recipe.zeoserver
recipe = plone.recipe.zeoserver
zeo-address = ${buildout:zeo-address}
# if we try to start as root, Zope will switch to the user below
effective-user = ${buildout:effective-user}
# Put the log, pid and socket files in var/zeoserver
zeo-log     = ${buildout:directory}/var/zeoserver/zeoserver.log
pid-file    = ${buildout:directory}/var/zeoserver/zeoserver.pid
socket-name = ${buildout:directory}/var/zeoserver/zeo.zdsock
# You may also control the environment variables for the zeoserver.
#environment-vars = ${buildout:environment-vars}
eggs = tempstorage


[client1]
recipe = plone.recipe.zope2instance
user = admin:admin
zope2-location = ${zope2:location}
port-base = 1
event-log = ${buildout:directory}/var/client1/event.log
z2-log    = ${buildout:directory}/var/client1/Z2.log
pid-file  = ${buildout:directory}/var/client1/client2.pid
lock-file = ${buildout:directory}/var/client1/client2.lock

  
[client2]
<= client1
port-base = 2
event-log = ${buildout:directory}/var/client2/event.log
z2-log    = ${buildout:directory}/var/client2/Z2.log
pid-file  = ${buildout:directory}/var/client2/client2.pid
lock-file = ${buildout:directory}/var/client2/client2.lock

# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.

[productdistros]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.distros
recipe = plone.recipe.distros
urls = 
    http://package-environment.googlecode.com/git/plone-env/Five-1.4.4.tgz
nested-packages =
version-suffix-packages =

[cmds]
# This recipe is used to set permissions for root mode installs
# For options see http://pypi.python.org/pypi/plone.recipe.command
recipe = plone.recipe.command
command =
    chmod 600 .installed.cfg
    find ${buildout:directory}/var -type d -exec chmod 700 {} \;
    chmod 744 ${buildout:directory}/bin/*
    chmod 755 ${buildout:directory}/bin/python
    mkdir -pm 755 ${buildout:directory}/{products,src}
    chown -R ${instance:effective-user} ${buildout:directory}/var
update-command = ${cmds:command}

[unicode]
recipe = plone.recipe.command
command =
   cat > ${buildout:directory}/lib/python2.4/site-packages/sitecustomize.py << EOF
   import sys
   sys.setdefaultencoding('utf-8')
   EOF
update-command = ${unicode:command}

[five]
recipe = plone.recipe.command
command =
    cp ${productdistros:location}/Five/skel/site.zcml ${instance:location}/etc
update-command = ${five:command}

[supervisor]
recipe = collective.recipe.supervisor
plugins =
      superlance
port = ${buildout:supervisor-address}
user = usrsupervisor
password = 123456
serverurl = http://supervisor.mustap.com
programs =
      10 zeo ${zeo:location}/bin/runzeo ${zeo:location}
      20 client1 ${client1:location}/bin/runzope ${client1:location} true
      20 client2 ${client2:location}/bin/runzope ${client2:location} true
      30 instance (autostart=false) ${instance:location}/bin/runzope true
eventlisteners =
      Memmon TICK_60 ${buildout:bin-directory}/memmon [-p client1=200MB]
      HttpOk (startsecs=20) TICK_60 ${buildout:bin-directory}/httpok [-p site1 -t 20 http://localhost:8080/]
groups =
      10 services zeo,client1
      20 others other,other2,other3

[versions]
superlance = 0.6
supervisor = 3.0b1
meld3 = 0.6.9
zc.recipe.egg = 1.2.2
ZopeUndo = 2.12.0
plone.recipe.zeoserver = 1.0a1
